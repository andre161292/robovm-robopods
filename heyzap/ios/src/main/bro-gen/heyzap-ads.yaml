package: org.robovm.pods.heyzap.ads
framework: HeyzapAds
include: 
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/foundation.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/uikit.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/coregraphics.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/corelocation.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/storekit.yaml
clang_args: ['-x', 'objective-c']
header_root: /../robopods/META-INF/robovm/ios/libs
headers:
    - HeyzapAds.framework/Headers/HeyzapAds.h
    - HeyzapAds.framework/Headers/HZMediatedNativeAd.h
    - HeyzapAds.framework/Headers/HZMediatedNativeAdManager.h
    - HeyzapAds.framework/Headers/HZMediatedNativeAdViewRegisterer.h
typedefs:
    'void (^)(HZBannerAd *)': '@Block VoidBlock1<HZBannerAd>'
    'void (^)(BOOL, NSError *)': '@Block VoidBlock2<Boolean, NSError>'
    'void (^)(NSError *, HZNativeAdCollection *)': '@Block VoidBlock2<NSError, HZNativeAdCollection>'
    'void (^)(id<HZMediatedNativeAdViewRegisterer>)': '@Block VoidBlock1<HZMediatedNativeAdViewRegisterer>'
    
enums:
    HZAdMobBannerSize: {}
    HZAdMobNativeAdImageOrientation: {}
    HZAdOptions: {bits: true}
    HZBannerPosition: {}
    HZFacebookBannerSize: {}
    HZDebugLevel: {first: HZDebugLevelVerbose}
    HZMediatedNativeAdType: {}
    HZPreferredImageOrientation: {}
        
classes:
    HeyzapAds: # DONE
        methods:
            '+setIncentiveDelegate:':
                exclude: true
            '+setDelegate:forNetwork:':
                name: setNetworkDelegate0
                visibility: private # strong ref
            '+networkCallbackWithBlock:':
                name: setNetworkCallback
                parameters:
                    block:
                        type: '@Block VoidBlock2<String, String>'
            '+isNetworkInitialized:':
                trim_after_first_colon: true
            '+startWithPublisherID:.*':
                name: start
            '+(defaultTagName|remoteData|demographicInformation)':
                property: true
            '+onIAPPurchaseComplete:productName:price:':
                trim_after_first_colon: true
    HZBannerAd: # DONE
        methods:
            '-dimensionsDescription':
                property: true
            '+placeBannerInView:position:options:success:failure:':
                trim_after_first_colon: true
            '+requestBannerWithOptions:success:failure:':
                name: requestBanner
    HZBannerAdOptions: {} # DONE
    HZDemographics: {} # DONE
    HZFetchOptions: # DONE
        properties:
            'admobNativeAdTypes':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
    HZIncentivizedAd: # DONE
        methods:
            '+setDelegate:':
                name: setDelegate0
                visibility: private
            '+show.*':
                name: show
            '+fetch.*':
                name: fetch
                parameters:
                    tags:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+isAvailableForTag:':
                name: isAvailable
    HZInterstitialAd: # DONE
        methods:
            '+setDelegate:':
                name: setDelegate0
                visibility: private
            '+show.*':
                name: show
            '+fetch.*':
                name: fetch
                parameters:
                    tags:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+isAvailableForTag:':
                name: isAvailable
            '+forceTestCreative:':
                trim_after_first_colon: true
    HZLog: # DONE
        methods:
            '+debugLevel':
                property: true
            '+.*':
                trim_after_first_colon: true
    HZMediatedNativeAd: # DONE
        methods:
            '-coverImageWithPreferredOrientation:':
                name: getCoverImage
            '-registerViews:':
                trim_after_first_colon: true
            '-wrapperView':
                property: true
                return_type: UIView
    HZMediatedNativeAdManager: # DONE
        methods:
            '+fetchNativeAdWithOptions:':
                name: fetchNativeAd
            '+getNextNativeAdForTag:error:':
                name: getNextNativeAd
                throws: NSErrorException
    HZNativeAd: # DONE
        properties:
            'iconURL':
                exclude: true # deprecated
        methods:
            '-presentAppStoreFromViewController:storeDelegate:completion:':
                name: presentAppStore
    HZNativeAdCollection: # DONE
        properties:
            'ads':
                type: NSArray<HZNativeAd>
    HZNativeAdController: # DONE
        methods:
            '+fetchAds:tag:completion:':
                trim_after_first_colon: true
    HZNativeAdImage: {} # DONE
    HZShowOptions: {} # DONE
    HZVideoAd: # DONE
        methods:
            '+setDelegate:':
                name: setDelegate0
                visibility: private
            '+show.*':
                name: show
            '+fetch.*':
                name: fetch
                parameters:
                    tags:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+isAvailableForTag:':
                name: isAvailable
    
protocols:
    HZAdsDelegate: # DONE
        methods:
            '-didShowAdWithTag:':
                name: didShowAd
            '-didFailToShowAdWithTag:andError:':
                name: didFailToShowAd
            '-didReceiveAdWithTag:':
                name: didReceiveAd
            '-didFailToReceiveAdWithTag:':
                name: didFailToReceiveAd
            '-didClickAdWithTag:':
                name: didClickAd
            '-didHideAdWithTag:':
                name: didHideAd
    HZBannerAdDelegate: # DONE
        methods:
            '-bannerDidReceiveAd:':
                name: didReceiveAd
            '-bannerDidFailToReceiveAd:error:':
                name: didFailToReceiveAd
            '-bannerWasClicked:':
                name: wasClicked
            '-bannerWillPresentModalView:':
                name: willPresentModalView
            '-bannerDidDismissModalView:':
                name: didDismissModalView
            '-bannerWillLeaveApplication:':
                name: willLeaveApplication
    HZIncentivizedAdDelegate: # DONE
        methods:
            '-didCompleteAdWithTag:':
                name: didCompleteAd
            '-didFailToCompleteAdWithTag:':
                name: didFailToCompleteAd
    HZMediatedNativeAdViewRegisterer: # DONE
        methods:
            '-registerOtherViews:tappable:':
                trim_after_first_colon: true
                parameters:
                    views:
                        type: NSArray<UIView>
            '-register.*':
                trim_after_first_colon: true

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?HZ.*):
        class: HeyzapAdsGlobals
        name: 'Function__#{g[0]}'

values:
    kHZBannerAd.*:
        exclude: true
    HZMediation.*:
        exclude: true
    HZAdTagUserInfoKey:
        exclude: true
    HZNetworkNameUserInfoKey:
        exclude: true
    HZNetworkCallbackNameUserInfoKey:
        exclude: true
    HZMediatedNativeAd.*:
        exclude: true

    HZInMobiBanner(Size.*):
        class: HZInMobiBannerSize
        name: '#{g[0]}'
    
    HZNetworkCallback(.*):
        class: HZNetworkCallback
        name: '#{g[0]}'
    HZNetwork(.*):
        class: HZNetwork
        name: '#{g[0]}'

    HZ(RemoteDataRefreshedNotification):
        class: HeyzapAds
        name: '#{g[0]}'
        type: NSString
    kHZLog(ThirdPartyLoggingEnabledChangedNotification):
        class: HZLog
        name: '#{g[0]}'
        type: NSString

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?HZ.*):
        class: HeyzapAdsGlobals
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?HZ.*):
        class: HeyzapAdsGlobals
        name: 'Constant__#{g[0]}'
