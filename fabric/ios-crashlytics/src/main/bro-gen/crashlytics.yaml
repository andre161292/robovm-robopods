package: org.robovm.pods.fabric.crashlytics
framework: Crashlytics
include: 
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/foundation.yaml
clang_args: ['-x', 'objective-c']
header_root: '/../robopods/META-INF/robovm/ios/libs/'
headers:
    - Crashlytics.framework/Headers/Crashlytics.h
typedefs:
    
enums:
        
classes:
    Crashlytics: # DONE
        methods:
            '-setObjectValue:forKey:':
                name: setObject0
                visibility: private
            '-setIntValue:forKey:':
                name: setInt0
                visibility: private
            '-setBoolValue:forKey:':
                name: setBool0
                visibility: private
            '-setFloatValue:forKey:':
                name: setFloat0
                visibility: private
            '-logEvent.*':
                exclude: true
            '-recordCustomExceptionName:reason:frameArray:':
                name: recordCustomException
                parameters:
                    frameArray:
                        type: NSArray<CLSStackFrame>
            '-recordError.*':
                trim_after_first_colon: true
                parameters:
                    userInfo:
                        type: NSDictionary<NSString, ?>
            '+startWithAPIKey:':
                name: start
            '+startWithAPIKey:delegate:':
                name: start0
                visibility: private
            '+sharedInstance':
                property: true
            '+.*':
                exclude: true
    CLSReport: # DONE
        methods:
            '-setObjectValue:forKey:':
                name: put0
                visibility: private
            '+new':
                exclude: true
    CLSStackFrame: # DONE
        skip_def_constructor: true
        methods:
            '+stackFrame.*':
                name: create
                constructor: true
    
protocols:
    CrashlyticsDelegate: # DONE
        methods:
            '-crashlyticsDidDetectCrashDuringPreviousExecution:':
                exclude: true
            '-crashlytics:didDetectCrashDuringPreviousExecution:':
                exclude: true
            '-crashlyticsDidDetectReportForLastExecution:completionHandler:':
                name: didDetectReportForLastExecution
            '-crashlyticsCanUseBackgroundSessions:':
                name: canUseBackgroundSessions
                default: true
    CLSCrashReport: # DONE
        skip_adapter: true

functions:
    CLSLogv:
        exclude: true
    CLSNSLogv:
        exclude: true

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?CLS.*):
        class: CrashlyticsGlobals
        name: 'Function__#{g[0]}'

values:
    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?CLS.*):
        class: CrashlyticsGlobals
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?CLS.*):
        class: CrashlyticsGlobals
        name: 'Constant__#{g[0]}'
