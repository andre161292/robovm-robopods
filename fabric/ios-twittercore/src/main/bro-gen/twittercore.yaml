package: org.robovm.pods.fabric.twitter
framework: TwitterCore
include: 
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/foundation.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/accounts.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/coredata.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/social.yaml
    - ../../../../../../robovm/cocoatouch/src/main/bro-gen/uikit.yaml
    
clang_args: ['-x', 'objective-c']
header_root: '/../robopods/META-INF/robovm/ios/libs/'
headers:
    - TwitterCore.framework/Headers/TwitterCore.h
typedefs:
    TWTRGuestLogInCompletion: '@Block VoidBlock2<TWTRGuestSession, NSError>'
    TWTRLogInCompletion: '@Block VoidBlock2<TWTRAuthSession, NSError>'
    TWTRSessionStoreRefreshCompletion: '@Block VoidBlock2<TWTRAuthSession, NSError>'
    TWTRSessionStoreSaveCompletion: '@Block VoidBlock2<TWTRAuthSession, NSError>'
    TWTRSessionStoreBatchFetchCompletion: '@Block VoidBlock1<NSArray<TWTRAuthSession>>'
    TWTRSessionStoreDeleteCompletion: '@Block VoidBlock1<TWTRAuthSession>'
    TWTRSessionGuestLogInCompletion: '@Block VoidBlock2<TWTRGuestSession, NSError>'
    
enums:
    TWTRAPIErrorCode: {}
    TWTRErrorCode: {}
    TWTRLogInErrorCode: {}
        
classes:
    TWTRAPIError:
        extends: NSError
        annotations: ['@StronglyLinked']
    TWTRError:
        extends: NSError
        annotations: ['@StronglyLinked']
    TWTRLogInError:
        extends: NSError
        annotations: ['@StronglyLinked']

    TWTRAuthConfig: # DONE
        skip_def_constructor: true
        methods:
            '-init.*':
                name: init
    TWTRGuestSession: # DONE
        skip_def_constructor: true
        methods:
            '-init.*':
                name: init
    TWTRSession: # DONE
        skip_def_constructor: true
        methods:
            '-init.*':
                name: init
    TWTRSessionStore: # DONE
        skip_def_constructor: true
    
protocols:
    TWTRAuthSession: {} # DONE
    TWTRBaseSession: {} # DONE
    TWTRCoreOAuthSigning: # DONE
        methods:
            '-OAuthEchoHeadersForRequestMethod:URLString:parameters:error:':
                name: getOAuthEchoHeadersForRequest
                return_type: TWTROAuthEchoHeaders
            '-OAuthEchoHeadersToVerifyCredentials':
                name: getOAuthEchoHeadersToVerifyCredentials
                return_type: TWTROAuthEchoHeaders
    TWTRSessionRefreshingStore: # DONE
        methods:
            '-refreshSessionClass:sessionID:completion:':
                trim_after_first_colon: true
                parameters:
                    sessionClass:
                        type: Class<? extends TWTRAuthSession>
            '-isExpiredSession:response:':
                name: isSessionExpired
                parameters:
                    session:
                        type: TWTRAuthSession
            '-isExpiredSession:error:':
                name: isSessionExpired
                parameters:
                    session:
                        type: TWTRAuthSession
    TWTRUserSessionStore: # DONE
        methods:
            '-saveSession:completion:':
                trim_after_first_colon: true
            '-saveSessionWithAuthToken:authTokenSecret:completion:':
                name: saveSession
            '-sessionForUserID:':
                name: getSessionForUserID
            '-existingUserSessions':
                property: true
                return_type: List<TWTRAuthSession>
                return_marshaler: NSArray.AsListMarshaler
            '-session':
                property: true
            '-logOutUserID:':
                trim_after_first_colon: true
    TWTRGuestSessionStore: # DONE
        methods:
            '-fetchGuestSessionWithCompletion:':
                name: fetchGuestSession
    TWTRSessionStore: # DONE
        name: TWTRSessionStoreProtocol

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?TWTR.*):
        class: TwitterCore
        name: 'Function__#{g[0]}'

values:
    TWTRAPIErrorDomain:
        class: TWTRAPIError
        name: getClassDomain
    TWTRErrorDomain:
        class: TWTRError
        name: getClassDomain
    TWTRLogInErrorDomain:
        class: TWTRLogInError
        name: getClassDomain

    # TWTRCoreOAuthSigning
    TWTROAuthEcho(.*)Key:
        dictionary: TWTROAuthEchoHeaders
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            RequestURLString:
                name: RequestURL
                type: String
            AuthorizationHeader:
                type: String

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?TWTR.*):
        class: TwitterCore
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?TWTR.*):
        class: TwitterCore
        name: 'Constant__#{g[0]}'
